<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wqstore.dao.AdminResourceMapper" >
  <resultMap id="BaseResultMap" type="com.wqstore.domain.AdminResource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="has_any_roles" property="hasAnyRoles" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="icons" property="icons" jdbcType="VARCHAR" />
    <result column="is_menu" property="isMenu" jdbcType="BIT" />
    <result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, url, creator, create_time, modifier, modified_time, has_any_roles, 
    weight, icons, is_menu, parent_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wqstore.domain.AdminResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from admin_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from admin_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wqstore.domain.AdminResourceExample" >
    delete from admin_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wqstore.domain.AdminResource" >
    insert into admin_resource (id, code, name, 
      url, creator, create_time, 
      modifier, modified_time, has_any_roles, 
      weight, icons, is_menu, 
      parent_code)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}, #{hasAnyRoles,jdbcType=VARCHAR}, 
      #{weight,jdbcType=INTEGER}, #{icons,jdbcType=VARCHAR}, #{isMenu,jdbcType=BIT}, 
      #{parentCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wqstore.domain.AdminResource" >
    insert into admin_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="hasAnyRoles != null" >
        has_any_roles,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="icons != null" >
        icons,
      </if>
      <if test="isMenu != null" >
        is_menu,
      </if>
      <if test="parentCode != null" >
        parent_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasAnyRoles != null" >
        #{hasAnyRoles,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="icons != null" >
        #{icons,jdbcType=VARCHAR},
      </if>
      <if test="isMenu != null" >
        #{isMenu,jdbcType=BIT},
      </if>
      <if test="parentCode != null" >
        #{parentCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wqstore.domain.AdminResourceExample" resultType="java.lang.Integer" >
    select count(*) from admin_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update admin_resource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifier != null" >
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hasAnyRoles != null" >
        has_any_roles = #{record.hasAnyRoles,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.icons != null" >
        icons = #{record.icons,jdbcType=VARCHAR},
      </if>
      <if test="record.isMenu != null" >
        is_menu = #{record.isMenu,jdbcType=BIT},
      </if>
      <if test="record.parentCode != null" >
        parent_code = #{record.parentCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update admin_resource
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      has_any_roles = #{record.hasAnyRoles,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=INTEGER},
      icons = #{record.icons,jdbcType=VARCHAR},
      is_menu = #{record.isMenu,jdbcType=BIT},
      parent_code = #{record.parentCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wqstore.domain.AdminResource" >
    update admin_resource
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasAnyRoles != null" >
        has_any_roles = #{hasAnyRoles,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="icons != null" >
        icons = #{icons,jdbcType=VARCHAR},
      </if>
      <if test="isMenu != null" >
        is_menu = #{isMenu,jdbcType=BIT},
      </if>
      <if test="parentCode != null" >
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wqstore.domain.AdminResource" >
    update admin_resource
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      has_any_roles = #{hasAnyRoles,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      icons = #{icons,jdbcType=VARCHAR},
      is_menu = #{isMenu,jdbcType=BIT},
      parent_code = #{parentCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <!-- custom -->
  <select id="findExcResourceCodeById" parameterType="java.lang.Long" resultType="java.lang.String">
  	select code from admin_resource where id != #{id}
  </select>
  
  <select id="findResourceByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from admin_resource
  	where id in (select resource_id from admin_role_ref_resource where role_id=#{id});
  </select>
  
  <select id="findResourceByNonRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from admin_resource
  	where id not in (select resource_id from admin_role_ref_resource where role_id=#{id});
  </select>
  
  <insert id="addRoleResourceRelation" parameterType="java.util.Map">
  	insert into admin_role_ref_resource (role_id, resource_id)  values
      <foreach collection="resourceIds" item="id" index="index" separator=",">
      <![CDATA[
      	(#{roleId},#{id})
      ]]>
      </foreach>
  </insert>
  
  <delete id="deleteRoleResourceRelation" parameterType="map">
  	delete from admin_role_ref_resource
  	where role_id=#{roleId} and resource_id in
  	<foreach collection="resourceIds" item="id" index="index" separator="," open="(" close=")">
      <![CDATA[
      	#{id}
      ]]>
      </foreach>
  </delete>
  
  <delete id="deleteRoleAllResourceRelations" parameterType="java.lang.Long">
  	delete from admin_role_ref_resource
  	where role_id=#{roleId}
  </delete>
  

	<select id="findResourceByRoleIds" parameterType="java.util.List" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from admin_resource where id in(
			select distinct(resource_id) from admin_role_ref_resource where role_id in
			<foreach collection="list" item="id" index="index" separator="," open="(" close=")">
		       <![CDATA[
		       	#{id}
		       ]]>
		    </foreach>
		)
	</select>
	
	<select id="findResourceByNameAndUserId" parameterType="java.util.Map" resultMap="BaseResultMap">
		select * from admin_resource where is_menu=1 
		<if test="name != null and name !=''">
			and name like '%${name}%'
		</if>
		
		<if test="isAdmin == false">
			and id in(
				select distinct(resource_id) from admin_role_ref_resource where role_id in (
					select distinct(role_id) from admin_user_ref_role where user_id=#{userId}
				)
			)
		</if>
		<if test="orderByClause != null" >
	      order by ${orderByClause}
	    </if>
	</select>
</mapper>